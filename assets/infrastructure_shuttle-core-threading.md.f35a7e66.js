import { _ as _export_sfc, o as openBlock, c as createElementBlock, d as createStaticVNode } from "./app.606b2888.js";
const __pageData = JSON.parse('{"title":"Shuttle.Core.Threading","description":"","frontmatter":{},"headers":[{"level":2,"title":"ProcessorThreadPool","slug":"processorthreadpool","link":"#processorthreadpool","children":[]},{"level":2,"title":"ProcessorThreadOptions","slug":"processorthreadoptions","link":"#processorthreadoptions","children":[]}],"relativePath":"infrastructure/shuttle-core-threading.md"}');
const _sfc_main = { name: "infrastructure/shuttle-core-threading.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="shuttle-core-threading" tabindex="-1">Shuttle.Core.Threading <a class="header-anchor" href="#shuttle-core-threading" aria-hidden="true">#</a></h1><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">PM&gt; Install-Package Shuttle.Core.Threading</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Provides various classes and interfaces to facilitate thread-based processing.</p><h2 id="processorthreadpool" tabindex="-1">ProcessorThreadPool <a class="header-anchor" href="#processorthreadpool" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ProcessorThreadPool</span><span style="color:#89DDFF;">(string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">threadCount</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IProcessorFactory</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">processorFactory</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ProcessorThreadOptions</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">processorThreadOptions</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Each thread pool has a <code>name</code> used only for identyfing the pool. The <code>threadCount</code> determines the number of <code>ProcessorThread</code> instances in the pool. Each <code>ProcessorThread</code> calls the <code>IProcessor.Execute(CancellationToken)</code> instance provided by the <code>IProcessorFactory.Create()</code> method in a loop while the <code>CancellationToken.IsCancellationRequested</code> returns <code>false</code>.</p><h2 id="processorthreadoptions" tabindex="-1">ProcessorThreadOptions <a class="header-anchor" href="#processorthreadoptions" aria-hidden="true">#</a></h2><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>JoinTimeout</code></td><td><code>00:00:15</code></td><td>The duration to allow the processor thread to join the main thread.</td></tr><tr><td><code>IsBackground</code></td><td><code>true</code></td><td>Indicates whether the thread will be started as a background thread. Background threads are instantly killed when the host process stops.</td></tr><tr><td><code>Priority</code></td><td><code>ThreadPriority.Normal</code></td><td>Indicates the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.threading.thread.priority?view=net-6.0" target="_blank" rel="noreferrer">thread priority</a>.</td></tr></tbody></table>', 8);
const _hoisted_9 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_9);
}
const shuttleCoreThreading = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  shuttleCoreThreading as default
};
