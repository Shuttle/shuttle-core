import { _ as _export_sfc, o as openBlock, c as createElementBlock, d as createStaticVNode } from "./app.7be1e3d0.js";
const __pageData = JSON.parse('{"title":"Shuttle.Core.Data","description":"","frontmatter":{},"headers":[{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[{"level":3,"title":"Connections","slug":"connections","link":"#connections","children":[]},{"level":3,"title":"Options","slug":"options","link":"#options","children":[]}]},{"level":2,"title":"GetReader","slug":"getreader","link":"#getreader","children":[]},{"level":2,"title":"Execute","slug":"execute","link":"#execute","children":[]},{"level":2,"title":"GetScalar","slug":"getscalar","link":"#getscalar","children":[]},{"level":2,"title":"GetDataTable","slug":"getdatatable","link":"#getdatatable","children":[]},{"level":2,"title":"GetRows","slug":"getrows","link":"#getrows","children":[]},{"level":2,"title":"GetRow","slug":"getrow","link":"#getrow","children":[]},{"level":2,"title":"FetchItems","slug":"fetchitems","link":"#fetchitems","children":[]},{"level":2,"title":"FetchItem","slug":"fetchitem","link":"#fetchitem","children":[]},{"level":2,"title":"FetchMappedRows","slug":"fetchmappedrows","link":"#fetchmappedrows","children":[]},{"level":2,"title":"FetchMappedRow","slug":"fetchmappedrow","link":"#fetchmappedrow","children":[]},{"level":2,"title":"Contains","slug":"contains","link":"#contains","children":[]},{"level":2,"title":"RawQuery","slug":"rawquery","link":"#rawquery","children":[]},{"level":2,"title":"ProcedureQuery","slug":"procedurequery","link":"#procedurequery","children":[]},{"level":2,"title":"MapFrom","slug":"mapfrom","link":"#mapfrom","children":[]}],"relativePath":"data/shuttle-core-data.md"}');
const _sfc_main = { name: "data/shuttle-core-data.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="shuttle-core-data" tabindex="-1">Shuttle.Core.Data <a class="header-anchor" href="#shuttle-core-data" aria-hidden="true">#</a></h1><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">PM&gt; Install-Package Shuttle.Core.Data</span></span>\n<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Provides a thin abstraction over <a href="http://ADO.NET" target="_blank" rel="noreferrer">ADO.NET</a>.</p><h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-hidden="true">#</a></h1><p>The <code>Shuttle.Core.Data</code> package provides a thin abstraction over <a href="http://ADO.NET" target="_blank" rel="noreferrer">ADO.NET</a> by making use of the <code>DbProviderFactories</code> (see <code>Shuttle.Core.Data.SqlClient</code> for .Net Core Provider Factory adapter). Even though it provides object/relational mapping mechanisms it is in no way an ORM.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h2><h3 id="connections" tabindex="-1">Connections <a class="header-anchor" href="#connections" aria-hidden="true">#</a></h3><p>Connections may be added by providing all the required information:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#A6ACCD;">services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddDataAccess</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">builder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	builder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddConnection</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> providerName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> connectionString</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">});</span></span>\n<span class="line"></span></code></pre></div><p>A connection may also be added by omitting the <code>connectionString</code>, in which case it will be read from the <code>ConnectionStrings</code> section:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#A6ACCD;">services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddDataAccess</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">builder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	builder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddConnectionString</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> providerName</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">});</span></span>\n<span class="line"></span></code></pre></div><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-hidden="true">#</a></h3><p>The relevant options may be set using the builder:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#A6ACCD;">services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddDataAccess</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">builder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	builder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CommandTimeout </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> timeout</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">	builder</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Options</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DatabaseContextFactory </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DatabaseContextFactoryOptions</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        DefaultConnectionStringName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">connection-string-name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;">// -- or --</span></span>\n<span class="line"><span style="color:#A6ACCD;">        DefaultProviderName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">provider-name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        DefaultConnectionString </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">connection-string</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">});</span></span>\n<span class="line"></span></code></pre></div><p>The default JSON settings structure is as follows:</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">Shuttle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">DataAccess</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">CommandTimeout</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">DatabaseContextFactory</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">DefaultConnectionStringName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">connection-string-name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#676E95;">// or</span></span>\n<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">DefaultProviderName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">provider-name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">DefaultConnectionString</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">connection-string</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h1 id="idatabasecontextfactory" tabindex="-1">IDatabaseContextFactory <a class="header-anchor" href="#idatabasecontextfactory" aria-hidden="true">#</a></h1><p>In order to access a database we need a database connection. A database connection is represented by an <code>IDatabaseContext</code> instance that may be obtained by using an instance of an <code>IDatabaseContextFactory</code> implementation.</p><p>The <code>DatabaseContextFactory</code> implementation makes use of an <code>IDbConnectionFactory</code> implementation which creates a <code>System.Data.IDbConnection</code> by using the provider name and connection string. An <code>IDbCommandFactory</code> creates a <code>System.Data.IDbCommand</code> by using an <code>IDbConnection</code> instance. The <code>DatabaseContextFactory</code> also requires an instance of an <code>IDatabaseContextCache</code> that stores connections and is assigned to the <code>DatabaseContext</code> in order to obtain the active connection.</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">factory</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> provider</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetRequiredService</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">DatabaseContextFactory</span><span style="color:#89DDFF;">&gt;();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> (var context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> factory.Create(&quot;connection-name&quot;))</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// database interaction</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">using (var context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> factory</span></span>\n<span class="line"><span style="color:#A6ACCD;">	.Create(&quot;System.Data.SqlClient&quot;, </span></span>\n<span class="line"><span style="color:#A6ACCD;">		&quot;Data Source</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">.\\sqlexpress</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">Initial</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Catalog</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Shuttle</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">Integrated</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Security</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">SSPI</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">))</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// database interaction</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">var context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> factory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Create</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">existingIDbConnection</span><span style="color:#89DDFF;">))</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// database interaction</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h1 id="idatabasegateway" tabindex="-1">IDatabaseGateway <a class="header-anchor" href="#idatabasegateway" aria-hidden="true">#</a></h1><p>The <code>DatabaseGateway</code> is used to execute <code>IQuery</code> instances in order return data from, or make changes to, the underlying data store. If there is no active open <code>IDatabaseContext</code> returned by the <code>DatabaseContext.Current</code> and <code>InvalidOperationException</code> will be thrown.</p><p>The following section each describe the methods available in the <code>IDatabaseGateway</code> interface.</p><h2 id="getreader" tabindex="-1">GetReader <a class="header-anchor" href="#getreader" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">IDataReader</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetReader</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Returns an <code>IDataReader</code> instance for the given <code>select</code> statement:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">factory</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DatabaseContextFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Default</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gateway</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DatabaseGateway</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> (var context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> factory.Create(&quot;connection-name&quot;))</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	var reader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gateway.GetReader(RawQuery.Create(&quot;select Id, Username from dbo.Member&quot;))</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="execute" tabindex="-1">Execute <a class="header-anchor" href="#execute" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#89DDFF;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Execute</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Executes the given query and returns the number of rows affected:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">factory</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DatabaseContextFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Default</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gateway</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DatabaseGateway</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> (var context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> factory.Create(&quot;connection-name&quot;))</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	gateway.Execute(RawQuery.Create(&quot;delete from dbo.Member where Username </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> &#39;mr.resistor&#39;&quot;))</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="getscalar" tabindex="-1">GetScalar <a class="header-anchor" href="#getscalar" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetScalar</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Get the scalar value returned by the <code>select</code> query. The query shoud return only one value (scalar):</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">factory</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DatabaseContextFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Default</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gateway</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DatabaseGateway</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> (var context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> factory.Create(&quot;connection-name&quot;))</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	var username </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gateway.GetScalar&lt;string&gt;(</span></span>\n<span class="line"><span style="color:#A6ACCD;">		RawQuery.Create(&quot;select Username from dbo.Member where Id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> 10&quot;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">	)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">id</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gateway</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetScalar</span><span style="color:#89DDFF;">&lt;int&gt;(</span></span>\n<span class="line"><span style="color:#A6ACCD;">		RawQuery</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Create</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">select Id from dbo.Member where Username = &#39;mr.resistor&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="getdatatable" tabindex="-1">GetDataTable <a class="header-anchor" href="#getdatatable" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">DataTable</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetDataTable</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Returns a <code>DataTable</code> containing the rows returned for the given <code>select</code> statement.</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">factory</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DatabaseContextFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Default</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gateway</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DatabaseGateway</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> (var context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> factory.Create(&quot;connection-name&quot;))</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	var table </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gateway.GetDataTable(RawQuery.Create(&quot;select Id, Username from dbo.Member&quot;))</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="getrows" tabindex="-1">GetRows <a class="header-anchor" href="#getrows" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">DataRow</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetRows</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Returns an enumerable containing the <code>DataRow</code> instances returned for a <code>select</code> query:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">factory</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DatabaseContextFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Default</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gateway</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DatabaseGateway</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> (var context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> factory.Create(&quot;connection-name&quot;))</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	var rows </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gateway.GetRows(RawQuery.Create(&quot;select Id, Username from dbo.Member&quot;))</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h2 id="getrow" tabindex="-1">GetRow <a class="header-anchor" href="#getrow" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">DataRow</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetRow</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Returns a single <code>DataRow</code> containing the values returned for a <code>select</code> statement that returns exactly one row:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">factory</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DatabaseContextFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Default</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gateway</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DatabaseGateway</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> (var context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> factory.Create(&quot;connection-name&quot;))</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	var row </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gateway.GetRow(</span></span>\n<span class="line"><span style="color:#A6ACCD;">		RawQuery.Create(&quot;select Id, Username, EMail, DateActivated from dbo.Member where Id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> 10&quot;)</span></span>\n<span class="line"><span style="color:#A6ACCD;">	)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span></code></pre></div><h1 id="idatarepository" tabindex="-1">IDataRepository <a class="header-anchor" href="#idatarepository" aria-hidden="true">#</a></h1><p>An <code>IDataRepository&lt;T&gt;</code> implementation is responsible for returning a hydrated object. To this end you make use of the <code>DataReposity&lt;T&gt;</code> class that takes a <code>IDatabaseGateway</code> instance along with a <code>IDataRowMapper&lt;T&gt;</code> used to create the hydrated instance.</p><p>The following methods can be used to interact with your object type.</p><h2 id="fetchitems" tabindex="-1">FetchItems <a class="header-anchor" href="#fetchitems" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FetchItems</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Uses the <code>select</code> clause represented by the <code>IQuery</code> instance to create a list of objects of type <code>T</code>. The <code>select</code> clause will need to select all the required columns and will, typically, return more than one instance.</p><h2 id="fetchitem" tabindex="-1">FetchItem <a class="header-anchor" href="#fetchitem" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FetchItem</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Returns a single object instance of type <code>T</code> that is hydrated using the data returned from the <code>select</code> clause represented by the <code>IQuery</code> instance.</p><h2 id="fetchmappedrows" tabindex="-1">FetchMappedRows <a class="header-anchor" href="#fetchmappedrows" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">MappedRow</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FetchMappedRows</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>This is similar to the <code>FetchItems</code> method but instead returns a list of <code>MappedRow&lt;T&gt;</code> instances. Uses the <code>select</code> clause represented by the <code>IQuery</code> instance to create a list of <code>MappedRow</code> instances of type <code>T</code>. The <code>select</code> clause will need to select all the required columns and will, typically, return more than one instance.</p><h2 id="fetchmappedrow" tabindex="-1">FetchMappedRow <a class="header-anchor" href="#fetchmappedrow" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">MappedRow</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FetchMappedRow</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Similar to the <code>FetchItem</code> method but instead return a <code>MappedRow&lt;T&gt;</code> instance that is hydrated using the data returned from the <code>select</code> clause represented by the <code>IQuery</code> instance.</p><h2 id="contains" tabindex="-1">Contains <a class="header-anchor" href="#contains" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#89DDFF;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Contains</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQuery</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Returns <code>true</code> is the <code>IQuery</code> instance <code>select</code> clause returns an <code>int</code> scalar that equals <code>1</code>; else returns <code>false</code>.</p><h1 id="iquery" tabindex="-1">IQuery <a class="header-anchor" href="#iquery" aria-hidden="true">#</a></h1><p>An <code>IQuery</code> represent a database query that can be executed against the relevant database type. There is only one method that needs to be implemented:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Prepare</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IDbCommand</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">command</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>This should ensure that the given <code>IDbCommand</code> is configured for execution by setting the relvant command attributes and parameters.</p><h1 id="iqueryparameter-iquery" tabindex="-1">IQueryParameter: IQuery <a class="header-anchor" href="#iqueryparameter-iquery" aria-hidden="true">#</a></h1><p>An <code>IQueryParameter</code> inherits the <code>IQuery</code> interface and extends it by allowing you to add parameters to a query by specifying an <code>IMappedColumn</code> (see below) instance along with the value for the parameter.</p><p>There are two implementations of this interface.</p><h2 id="rawquery" tabindex="-1">RawQuery <a class="header-anchor" href="#rawquery" aria-hidden="true">#</a></h2><p>The <code>RawQuery</code> enables you to create any query using the native language structure:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> RawQuery</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Create</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">select UserName from dbo.Member where Id = @Id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddParameterValue</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Guid</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DbType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Guid</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Guid</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{75208260-CF93-454E-95EC-FE1903F3664E}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">));</span></span>\n<span class="line"></span></code></pre></div><h2 id="procedurequery" tabindex="-1">ProcedureQuery <a class="header-anchor" href="#procedurequery" aria-hidden="true">#</a></h2><p>The <code>ProcedureQuery</code> is used to execute a stored procedure:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ProcedureQuery</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Create</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uspMemberById</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddParameterValue</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Guid</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DbType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Guid</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Guid</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{75208260-CF93-454E-95EC-FE1903F3664E}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">));</span></span>\n<span class="line"></span></code></pre></div><h1 id="mappedcolumn" tabindex="-1">MappedColumn <a class="header-anchor" href="#mappedcolumn" aria-hidden="true">#</a></h1><p>Typically you would not want to create a <code>MappedColumn</code> each time you need it and these are also quite fixed. A column mapping can, therefore, by defined statically:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> System.Data</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> Shuttle.Core.Data</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> Shuttle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Ordering</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DataAccess</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OrderColumns</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Guid</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Id</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Guid</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DbType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Guid</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;string&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OrderNumber</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;string&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OrderNumber</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DbType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;string&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OrderDate</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;string&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OrderDate</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DbType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DateTime</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;string&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CustomerName</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;string&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CustomerName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DbType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;string&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CustomerEMail</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedColumn</span><span style="color:#89DDFF;">&lt;string&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CustomerEMail</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DbType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">130</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>There are quite a few options that you can set on the <code>MappedColumn</code> in order to represent your column properly.</p><h2 id="mapfrom" tabindex="-1">MapFrom <a class="header-anchor" href="#mapfrom" aria-hidden="true">#</a></h2><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MapFrom</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">DataRow</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">row</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span></code></pre></div><p>This will return the typed value of the specified column as contained in the passed-in <code>DataRow</code>.</p><h1 id="idatarowmapper" tabindex="-1">IDataRowMapper <a class="header-anchor" href="#idatarowmapper" aria-hidden="true">#</a></h1><p>You use this interface to implement a mapper for a <code>DataRow</code> that will result in an object of type <code>T</code>:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> System.Data</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> Shuttle.Core.Data</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> Shuttle.Process.Custom.Server.Domain</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> Shuttle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ProcessManagement</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OrderProcessMapper</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IDataRowMapper</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">OrderProcess</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedRow</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">OrderProcess</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">DataRow</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">row</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">result</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OrderProcess</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">OrderProcessColumns</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Id</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MapFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">row</span><span style="color:#89DDFF;">))</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">                CustomerName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> OrderProcessColumns</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CustomerName</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MapFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">row</span><span style="color:#89DDFF;">),</span></span>\n<span class="line"><span style="color:#A6ACCD;">                CustomerEMail </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> OrderProcessColumns</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CustomerEMail</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MapFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">row</span><span style="color:#89DDFF;">),</span></span>\n<span class="line"><span style="color:#A6ACCD;">                OrderId </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> OrderProcessColumns</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OrderId</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MapFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">row</span><span style="color:#89DDFF;">),</span></span>\n<span class="line"><span style="color:#A6ACCD;">                InvoiceId </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> OrderProcessColumns</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">InvoiceId</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MapFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">row</span><span style="color:#89DDFF;">),</span></span>\n<span class="line"><span style="color:#A6ACCD;">                DateRegistered </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> OrderProcessColumns</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DateRegistered</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MapFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">row</span><span style="color:#89DDFF;">),</span></span>\n<span class="line"><span style="color:#A6ACCD;">                OrderNumber </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> OrderProcessColumns</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OrderNumber</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MapFrom</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">row</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MappedRow</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">OrderProcess</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">row</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h1 id="mappedrow" tabindex="-1">MappedRow <a class="header-anchor" href="#mappedrow" aria-hidden="true">#</a></h1><p>A <code>MappedRow</code> instance contains bother a <code>DataRow</code> and the object that the <code>DataRow</code> mapped to.</p><p>This may be useful in situation where the <code>DataRow</code> contains more information that is available on the object. An example may be an <code>OrderLine</code> where the <code>DataRow</code> contains the <code>OrderId</code> column but the <code>OrderLine</code> object does not. In order to still be able to make that association it is useful to have both available.</p><h1 id="iassembler" tabindex="-1">IAssembler <a class="header-anchor" href="#iassembler" aria-hidden="true">#</a></h1><p>An <code>IAssembler</code> implementation is used to create multiple mappings with as few calls as possible. An example may be where we perform two <code>select</code> queries; one to get 3 orders and another to get the order lines belonging to those 3 orders.</p><blockquote><p><code>select OrderId, OrderNumber, OrderDate from dbo.Order where OrderId in (2, 6, 44)</code></p></blockquote><table><thead><tr><th>Order Id</th><th>Order Number</th><th>Order Date</th></tr></thead><tbody><tr><td>2</td><td>ORD-002</td><td>14 Feb 2016</td></tr><tr><td>6</td><td>ORD-006</td><td>24 Mar 2016</td></tr><tr><td>44</td><td>ORD-044</td><td>4 Apr 2016</td></tr></tbody></table><blockquote><p><code>select OrderId, Product, Quantity from dbo.OrderLine where OrderId in (2, 6, 44)</code></p></blockquote><table><thead><tr><th>Order Id</th><th>Product</th><th>Quantity</th></tr></thead><tbody><tr><td>2</td><td>Red Socks</td><td>2</td></tr><tr><td>2</td><td>Blue Socks</td><td>3</td></tr><tr><td>6</td><td>Sports Towel</td><td>1</td></tr><tr><td>6</td><td>Squash Racquet</td><td>1</td></tr><tr><td>6</td><td>Squash Ball</td><td>3</td></tr><tr><td>44</td><td>Vaughn&#39;s DDD Book</td><td>1</td></tr><tr><td>44</td><td>Shuttle.Sentinel License</td><td>5</td></tr></tbody></table><p>Using a <code>MappedData</code> instance we can keep adding the <code>MappedRow</code> instances to the <code>MappedData</code> and then have the assembler return the three <code>Order</code> aggregates:</p><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OrderAssembler</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IAssembler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Order</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Order</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Assemble</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">MappedData</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">result</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Order</span><span style="color:#89DDFF;">&gt;();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">foreach</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">orderRow</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MappedRows</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Order</span><span style="color:#89DDFF;">&gt;())</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">order</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> orderRow</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Result</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">foreach</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">orderLineRow</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MappedRows</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">OrderLine</span><span style="color:#89DDFF;">&gt;())</span></span>\n<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">orderLineRow</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Row</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OrderId</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">].</span><span style="color:#82AAFF;">Equals</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">order</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OrderId</span><span style="color:#89DDFF;">))</span></span>\n<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">					order</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddLine</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">orderLineRow</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Result</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">			result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">order</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div>', 99);
const _hoisted_100 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_100);
}
const shuttleCoreData = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  shuttleCoreData as default
};
