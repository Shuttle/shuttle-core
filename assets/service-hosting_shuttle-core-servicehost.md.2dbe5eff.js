import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.f52045f1.js";
const __pageData = '{"title":"Shuttle.Core.ServiceHost","description":"","frontmatter":{},"headers":[{"level":2,"title":"Running the host","slug":"running-the-host"},{"level":2,"title":".Net 4.6+ options","slug":"net-4-6-options"},{"level":3,"title":"Configuration Section","slug":"configuration-section"},{"level":3,"title":"Command Line (.Net 4.6+ only)","slug":"command-line-net-4-6-only"},{"level":3,"title":"Service Name","slug":"service-name"},{"level":3,"title":"Uninstall","slug":"uninstall"},{"level":3,"title":"Example","slug":"example"}],"relativePath":"service-hosting/shuttle-core-servicehost.md"}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="shuttle-core-servicehost" tabindex="-1">Shuttle.Core.ServiceHost <a class="header-anchor" href="#shuttle-core-servicehost" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>Please Note:</strong> <em>This package is now obsolete. Please make use of <code>Shuttle.Core.WorkerService</code></em></p></div><div class="language-"><pre><code>PM&gt; Install-Package Shuttle.Core.ServiceHost\n</code></pre></div><p>Allows you to host your console application. When using .Net 4.6+ your console may also be hosted as a Windows Service. When using .Net Core 2.0+ your console hosting can be stopped by sending <code>ctrl+c</code> to the console.</p><p>A typical implementation would be as follows:</p><div class="language-c#"><pre><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> System.Threading</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> System.Threading.Tasks</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> Shuttle.Core.Threading</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> Shuttle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Core</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ServiceHost</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Server</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">internal</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Program</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Main</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            ServiceHost</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Host</span><span style="color:#89DDFF;">&gt;();</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Host</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceHost</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_task</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CancellationTokenSource</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_cancellationTokenSource</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CancellationToken</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_cancellationToken</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Start</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">                _cancellationTokenSource </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CancellationTokenSource</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#A6ACCD;">                _cancellationToken </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _cancellationTokenSource</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Token</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">                _task </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">(()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">_cancellationToken</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">IsCancellationRequested</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">                        Console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">WriteLine</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">$&quot;</span><span style="color:#C3E88D;">[working] : </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">DateTime</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Now</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;">O</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">                        ThreadSleep</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">While</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _cancellationToken</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> _cancellationToken</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Stop</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">                _cancellationTokenSource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Cancel</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#A6ACCD;">                _task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Wait</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>Implement the <code>IServiceHost</code> interface if you need both <code>Start()</code> and <code>Stop()</code> methods; else <code>IServiceHostStart</code> for <code>Start()</code> and <code>IServiceHostStop</code> for <code>Stop()</code> although there would be little value in having only a <code>Stop()</code>. If you do not need a <code>Stop()</code> method or you prefer using <code>IDisposable</code> to handle the destruction then you would go with only the <code>IServiceHostStart</code> interface.</p><h2 id="running-the-host" tabindex="-1">Running the host <a class="header-anchor" href="#running-the-host" aria-hidden="true">#</a></h2><p>The following methods are available to get this going on the <code>ServiceHost</code> class:</p><div class="language-c#"><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;()</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceHostStart</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#FFCB6B;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Run</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IServiceHostStart</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">service</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span></code></pre></div><p>For .Net 4.6+ the following are also available:</p><div class="language-c#"><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#FFCB6B;">Action</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IServiceConfiguration</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">configure</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceHostStart</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#FFCB6B;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Run</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IServiceHostStart</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">service</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Action</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IServiceConfiguration</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">configure</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span></code></pre></div><p>The <code>IServiceConfiguration</code> allows you to configure the service from code. Configuration supplied through code has the highest precedence.</p><h2 id="net-4-6-options" tabindex="-1">.Net 4.6+ options <a class="header-anchor" href="#net-4-6-options" aria-hidden="true">#</a></h2><h3 id="configuration-section" tabindex="-1">Configuration Section <a class="header-anchor" href="#configuration-section" aria-hidden="true">#</a></h3><p>You may also specify configuration using the following configuration which may, as all Shuttle configuration sections do, be grouped under a <code>shuttle</code> group.</p><div class="language-xml"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">configuration</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">configSections</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">service</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Shuttle.Core.ServiceHost.ServiceHostSection, Shuttle.Core.ServiceHost</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">configSections</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">service</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">serviceName</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test-service</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">instance</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">one</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">username</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mr.resistor</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">password</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ohm</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">startMode</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Disabled</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">configuration</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><h3 id="command-line-net-4-6-only" tabindex="-1">Command Line (.Net 4.6+ only) <a class="header-anchor" href="#command-line-net-4-6-only" aria-hidden="true">#</a></h3><p>The following command-line arguments are available and can be viewed by running <code>{your-console}.exe /?</code>:</p><div class="language-"><pre><code>[/install [/serviceName]]    \n    - install the service\n        \n[/displayName]                \n    - friendly name for the installed service\n        \n[/description]                \n    - Description for the service\n        \n[/instance]                    \n    - unique name of the instance you wish to install\n        \n[/startMode]            \n    - specifies that the service start mode (Boot, System, Automatic, Manual, Disabled)\n        \n[/delayedAutoStart]\n    - if specified will delay services with a start mode of &#39;Automatic&#39;\n\n[/username /password]\n    - username and password of the account to use for the service\n\n- or -\n    \n[/uninstall [/serviceName] [/instance]]    \n\n[/start]\n    - starts the service instance\n\n[/stop]\n    - stops the service instance\n</code></pre></div><h3 id="service-name" tabindex="-1">Service Name <a class="header-anchor" href="#service-name" aria-hidden="true">#</a></h3><p>If no <code>/serviceName</code> is specified the full name of the your console application along with the version number, e.g.:</p><div class="language-"><pre><code>Namespace.ConsoleApplication (1.0.0.0)\n</code></pre></div><h3 id="uninstall" tabindex="-1">Uninstall <a class="header-anchor" href="#uninstall" aria-hidden="true">#</a></h3><p>If you set the <code>/serviceName</code> and/or <code>/instance</code> during installation you will need to specify them when uninstalling as well, e.g.:</p><div class="language-"><pre><code>{your-console}.exe \n    /uninstall \n    /serviceName:&quot;Shuttle.Application.Server&quot; \n    /instance:&quot;Instance5&quot;\n</code></pre></div><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h3><div class="language-"><pre><code>{your-console}.exe \n    /install \n    /serviceName:&quot;Shuttle.Application.Server&quot; \n    /displayName:&quot;Shuttle server for the application&quot;\n    /description:&quot;Service to handle messages relating to the application.&quot; \n    /username:&quot;domain\\\\hostuser&quot;\n    /password:&quot;p@ssw0rd!&quot;\n</code></pre></div>', 28);
const _hoisted_29 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_29);
}
var shuttleCoreServicehost = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, shuttleCoreServicehost as default };
